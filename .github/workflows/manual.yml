# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
   dispatch:
    name: Dispatch  
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: oprypin/find-latest-tag@v1
    
      with:
        repository: nationalarchives/tna-judgments-parser  # The repository to scan.
        #releases-only: true  # We know that all relevant tags have a GitHub release for them.
      id: octokit  # The step ID to refer to later.

    - run: echo "Octokit is at version ${{ steps.octokit.outputs.tag }}"
    - name: Read JSON file # this puts the whole JSON file in the read-json step output
      id: read-json
      run: | # to read multi-line JSON file and not bother with escaping
          echo "config<<EOF" >> $GITHUB_OUTPUT
          cat ./terraform/ids.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
    - name: End 
      id: echo-value
      run: |
       echo "${{toJson(fromJson(steps.read-json.outputs.config).imageIds.*.imageTag)}}" >> props.json
       cat props.json
       echo "::set-output name=LATEST_VERSION::$(
       grep 'v' props.json |  sort -bt. -k1,1 -k2,2n -k3,3n -k4,4n -k5,5n | tail -1 )"
       grep v props.json |  sort -bt. -k1,1 -k2,2n -k3,3n -k4,4n -k5,5n | tail -1 
       echo::set-env name=TAG_NAME::$(grep 'v' props.json |  sort -bt. -k1,1 -k2,2n -k3,3n -k4,4n -k5,5n | tail -1)
       echo "LATEST=$(grep 'v' props.json |  sort -bt. -k1,1 -k2,2n -k3,3n -k4,4n -k5,5n | tail -1)"  >> $GITHUB_OUTPUT
    - name: Output latest
      run: | 
        echo "tna-judgments-parser is at version ${{steps.echo-value.LATEST}}"
        echo "tna-judgments-parsers is at version ${{env.TAG_NAME}}"
    
    
       
#       echo "platform=${{fromJson(steps.read-json.outputs.config).court_document_parse_image_versions.tre_court_document_parse}}" 
#      ./.github/scripts/check_version.sh ${{ steps.octokit.outputs.tag }} v0.16.3
#    - name: Update json-values description
#      uses: jossef/action-set-json-field@v2.1
#      with:
#        file: ./terraform/staging.tfvars.json
#        field: court_document_parse_version
#        value: vGOOD
#    - name: Commit files
#      run: |
#        git config --local user.email "action@github.com"
#        git config --local user.name "GitHub Action"
#        git add -A
#        git commit -m "docs(): bumping release "
#      #  git tag ${{ steps.semantic_release_info.outputs.git_tag }}
#
#    - name: Push changes
#      uses: ad-m/github-push-action@v0.6.0
#      with:
#        github_token: ${{ github.token }}
       # tags: true
      
    
   
     
  
